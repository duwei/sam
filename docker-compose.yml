version: '3'

networks:
  laravel:
    driver: bridge

services:
  site:
    build:
      context: .
      dockerfile: nginx.dockerfile
    ports:
      - 9090:80
    volumes:
      - ./src:/var/www/html:delegated
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - api
      - redis
      - mysql
    networks:
      - laravel

  mysql:
    image: mariadb:latest
    restart: unless-stopped
    tty: true
    # ports:
      # - 4307:3306
    volumes:
      - ./data:/var/lib/mysql
    environment:
      MYSQL_DATABASE: homestead
      MYSQL_USER: homestead
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    networks:
      - laravel

  api:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    privileged: true
    networks:
      - laravel

  redis:
    image: redis:alpine
    restart: unless-stopped
    networks:
      - laravel

  composer:
    build:
      context: .
      dockerfile: composer.dockerfile
    volumes:
      - ./src:/var/www/html
    user: laravel
#    entrypoint: ['composer', '--ignore-platform-reqs']
    entrypoint: ['composer']
    networks:
      - laravel

  artisan:
    build:
      context: .
      dockerfile: php.dockerfile
    volumes:
      - ./src:/var/www/html:delegated
    depends_on:
      - mysql
    user: laravel
    entrypoint: ['php', 'artisan']
    networks:
      - laravel

  npm:
    image: node:alpine
    volumes:
      - ./src:/var/www/html
    ports:
      - 3000:3000
      - 8000:8000
    entrypoint: ['npm']
    networks:
      - laravel

  client:
    build:
      context: .
      dockerfile: php.dockerfile
    ports:
      - 9090:8080
    volumes:
      - ./src:/var/www/html:delegated
    working_dir: /var/www/html/client
    user: laravel
    entrypoint: ['php', '-S', '0.0.0.0:8080', '-t', 'public']
    networks:
      - laravel
    links:
      - site
